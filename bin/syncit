#!/usr/bin/env python

import os
import shutil

import argparse

parser = argparse.ArgumentParser(description='Simple Sync')
parser.add_argument('-d','--directory', help='Path to back up',action="store",required=True)
args = parser.parse_args()

source = os.path.join(os.path.expanduser('~'),args.directory)
target = os.path.join(os.path.expanduser('~'),'bkp',args.directory)
secondary = os.path.join('/Volumes/EMPTY',args.directory)

def remove_extra(old,extra,files,subdirs):
	'''Removes extra files in the target directory'''

	if os.path.isfile(extra):
		if old not in files:
			print old,extra
			os.remove(extra)

	if os.path.isdir(extra):
		if old not in subdir:
			shutil.rmtree(extra)

	return True

for directory,subdir,files in os.walk(source):

	# Checking existing files.
	backup_path = directory.replace(source,target)
	secondary_path = directory.replace(source,secondary)

	# Create Backup Path if it does not exist, and remove extra files.
	if not os.path.exists(backup_path):
		os.makedirs(backup_path)
	if not os.path.exists(secondary_path):
		os.makedirs(secondary_path)
	else:
		backup_targets = os.listdir(backup_path)
		secondary_targets = os.listdir(secondary_path)
		for old in backup_targets:
			remove_extra(old,os.path.join(backup_path,old),files,subdir)
		for old in secondary_targets:
			# print old,os.path.join(secondary_path,old)
			remove_extra(old,os.path.join(secondary_path,old),files,subdir)

	# Copy each file to the new destination.
	for file in files:
		candidate = os.path.join(directory,file)
		backup = candidate.replace(source,target)
		sec = candidate.replace(source,secondary)
		

		if not os.path.exists(backup):
			shutil.copy(candidate,backup)
			if not os.stat(candidate).st_size == os.stat(backup).st_size:
				shutil.copy(candidate,backup)

		if not os.path.exists(sec):
			shutil.copy(candidate,sec)
			if not os.stat(candidate).st_size == os.stat(sec).st_size:
				shutil.copy(candidate,sec)
